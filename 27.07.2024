Python - 1
# i. Function to reverse a list
def reverse_list(input_list):
    return input_list[::-1]

# ii. Function to calculate grades
def calculate_grade(score):
    if score >= 90:
        return "A"
    elif score >= 80:
        return "B"
    elif score >= 70:
        return "C"
    elif score >= 60:
        return "D"
    else:
        return "F"

# Test the functions
input_list = [1, 2, 3, 4, 5]
reversed_list = reverse_list(input_list)
print("Reversed List:", reversed_list)

score = 85
grade = calculate_grade(score)
print("Grade:", grade)

Python - 2
# i. Function to square elements of a list
def square_elements(input_list):
    return [x ** 2 for x in input_list]

# ii. Function to provide weather advice
def weather_advice(temperature):
    if temperature < 0:
        return "Stay inside, it's freezing!"
    elif 0 <= temperature <= 15:
        return "Wear a coat."
    elif 16 <= temperature <= 25:
        return "A light jacket is enough."
    else:
        return "It's warm, dress lightly."

# Test the functions
input_list = [1, 2, 3, 


Python - 3

# i. Function to sort a list without using built-in sort function
def custom_sort(input_list):
    for i in range(len(input_list)):
        for j in range(i + 1, len(input_list)):
            if input_list[i] > input_list[j]:
                input_list[i], input_list[j] = input_list[j], input_list[i]
    return input_list

# ii. Function to calculate bonus amount
def calculate_bonus(salary, rating):
    if rating <= 2:
        return 0
    elif rating <= 4:
        return 0.05 * salary
    else:
        return 0.10 * salary

# Test the functions
numbers = [3, 1, 4, 2, 5]
sorted_numbers = custom_sort(numbers)
print("Sorted List:", sorted_numbers)

salary = 50000
rating = 4
bonus = calculate_bonus(salary, rating)
print("Bonus Amount:", bonus)


Python - 4

# i. Function to determine if the number of even numbers is greater than the number of odd numbers
def even_or_odd(numbers):
    even_count = sum(1 for num in numbers if num % 2 == 0)
    odd_count = len(numbers) - even_count
    if even_count > odd_count:
        return "even"
    else:
        return "odd"

# ii. Function to find students present in both lists
def common_students(list1, list2):
    return list(set(list1) & set(list2))




Python - 5

import re

# i. Function to check if a string is a palindrome
def is_palindrome(s):
    s = s.lower()  # Convert to lowercase for case-insensitive comparison
    return s == s[::-1]

# ii. Function to extract email addresses from a string
def extract_emails(text):
    pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
    return re.findall(pattern, text)


