Python_pr - 1
==============
if __name__ == '__main__':
    a = int(input())
    b = int(input())
    print(a+b)
    print(a-b)
    print(a*b)
**********************************************************************************************************************************************************************
**********************************************************************************************************************************************************************   
Python_pr - 2
=============
if __name__ == '__main__':
    a = int(input())
    b = int(input())
    print(a//b)
    print(a/b)
**********************************************************************************************************************************************************************
**********************************************************************************************************************************************************************
Python_pr - 3
=============
if __name__ == '__main__':
    n = int(input())
    for i in range (n):
        if i<n:
            print(i*i)
**********************************************************************************************************************************************************************
**********************************************************************************************************************************************************************
Python_pr - 4
=============
def is_leap(year):
    leap = False
    
    if year/4!=0:
    
        return leap

year = int(input())
print(is_leap(year))
**********************************************************************************************************************************************************************
**********************************************************************************************************************************************************************
Pyhton_pr - 5
=============
def is_leap(year):
    leap = False
    
    if year/4!=0:
    
        return leap

year = int(input())
print(is_leap(year))
**********************************************************************************************************************************************************************
**************************************************************************************************************************************************************************
Python_pr - 6
=============
def is_leap(year):
    # Check if the year is divisible by 4
    if year % 4 == 0:
        # Check if the year is divisible by 100
        if year % 100 == 0:
            # Check if the year is divisible by 400
            if year % 400 == 0:
                return True
            else:
                return False
        else:
            return True
    else:
        return False

year = int(input())
print(is_leap(year))
**********************************************************************************************************************************************************************
********************************************************************************************************************************************************************

Python_pr - 7
=============
def print_consecutive_integers(n):
    result = ''.join(str(i) for i in range(1, n + 1))
    print(result)


n = int(input())
print_consecutive_integers(n)

**********************************************************************************************************************************************************************
********************************************************************************************************************************************************************

Python_pr - 8
==============
# Read number of students
num_students = int(input())

# List to store student information
students = []

# Read the student names and grades
for _ in range(num_students):
    name = input()
    grade = float(input())
    students.append([name, grade])

# Extract all grades
grades = sorted({student[1] for student in students})

# Find the second lowest grade
second_lowest_grade = grades[1]

# Find all students with the second lowest grade
second_lowest_students = [student[0] for student in students if student[1] == second_lowest_grade]

# Sort the names alphabetically
second_lowest_students.sort()

# Print each name on a new line
for name in second_lowest_students:
    print(name)
