import concurrent.futures
import time

def worker(n):
    print(f'Worker {n} starting')
    time.sleep(2)
    print(f'Worker {n} finished')
    return n * n

def main():
    with concurrent.futures.ThreadPoolExecutor(max_workers=3) as executor:
        futures = [executor.submit(worker, i) for i in range(5)]
        for future in concurrent.futures.as_completed(futures):
            print(f'Result: {future.result()}')

if __name__ == "__main__":
    main()
